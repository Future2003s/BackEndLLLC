const mongoose = require("mongoose");
require("dotenv").config();

console.log("üöÄ Starting product creation with backend schema...");
console.log("Database URI:", process.env.DATABASE_URI ? "Found" : "Missing");

// Import the actual Product model from backend
const ProductSchema = new mongoose.Schema(
    {
        name: { type: String, required: true, maxlength: 255 },
        description: { type: String, required: true },
        shortDescription: { type: String, maxlength: 500 },
        price: { type: Number, required: true, min: 0 },
        comparePrice: { type: Number, min: 0 },
        costPrice: { type: Number, min: 0 },
        sku: { type: String, required: true, unique: true, maxlength: 100 },
        barcode: { type: String, maxlength: 100 },
        trackQuantity: { type: Boolean, default: true },
        quantity: { type: Number, default: 0, min: 0 },
        allowBackorder: { type: Boolean, default: false },
        weight: { type: Number, min: 0 },
        dimensions: {
            length: { type: Number, min: 0 },
            width: { type: Number, min: 0 },
            height: { type: Number, min: 0 },
            unit: { type: String, enum: ["cm", "in"], default: "cm" }
        },

        // Category and Brand
        category: { type: mongoose.Schema.Types.ObjectId, ref: "Category", required: true },
        brand: { type: mongoose.Schema.Types.ObjectId, ref: "Brand" },
        tags: [{ type: String, maxlength: 50 }],

        // Images and Media
        images: [
            {
                url: { type: String, required: true },
                alt: { type: String },
                isMain: { type: Boolean, default: false },
                order: { type: Number, default: 0 }
            }
        ],

        // Variants
        hasVariants: { type: Boolean, default: false },
        variants: [
            {
                name: { type: String, required: true },
                options: [{ type: String }]
            }
        ],

        // SEO
        seo: {
            title: { type: String, maxlength: 255 },
            description: { type: String, maxlength: 500 },
            keywords: [{ type: String }]
        },

        // Status and Visibility
        status: {
            type: String,
            enum: ["active", "draft", "archived", "out_of_stock"],
            default: "draft"
        },
        isVisible: { type: Boolean, default: true },
        isFeatured: { type: Boolean, default: false },
        isDigital: { type: Boolean, default: false },

        // Sales and Reviews
        sold: { type: Number, default: 0, min: 0 },
        views: { type: Number, default: 0, min: 0 },
        averageRating: { type: Number, default: 0, min: 0, max: 5 },
        totalReviews: { type: Number, default: 0, min: 0 },
        totalRatings: { type: Number, default: 0, min: 0 },

        // Timestamps
        publishedAt: { type: Date },
        deletedAt: { type: Date }
    },
    {
        timestamps: true,
        toJSON: { virtuals: true },
        toObject: { virtuals: true }
    }
);

const CategorySchema = new mongoose.Schema(
    {
        name: { type: String, required: true, trim: true, maxlength: 100 },
        slug: { type: String, required: true, unique: true, lowercase: true },
        description: { type: String, maxlength: 500 },
        image: {
            url: { type: String },
            alt: { type: String }
        },
        parent: { type: mongoose.Schema.Types.ObjectId, ref: "Category" },
        isActive: { type: Boolean, default: true },
        sortOrder: { type: Number, default: 0 },
        seo: {
            title: { type: String, maxlength: 255 },
            description: { type: String, maxlength: 500 },
            keywords: [{ type: String }]
        }
    },
    {
        timestamps: true,
        toJSON: { virtuals: true },
        toObject: { virtuals: true }
    }
);

const BrandSchema = new mongoose.Schema(
    {
        name: { type: String, required: true, trim: true, maxlength: 100 },
        slug: { type: String, required: true, unique: true, lowercase: true },
        description: { type: String, maxlength: 500 },
        logo: {
            url: { type: String },
            alt: { type: String }
        },
        website: { type: String },
        isActive: { type: Boolean, default: true },
        sortOrder: { type: Number, default: 0 }
    },
    {
        timestamps: true
    }
);

async function createSampleProducts() {
    console.log("üì¶ Creating Sample Products with Backend Schema");
    console.log("üéØ Goal: Add sample products to database for testing");
    console.log("=".repeat(60));

    try {
        // Connect to MongoDB Cloud
        console.log("üîó Connecting to MongoDB Cloud...");
        await mongoose.connect(process.env.DATABASE_URI);
        console.log("‚úÖ Connected to MongoDB Cloud");

        const Product = mongoose.model("Product", ProductSchema);
        const Category = mongoose.model("Category", CategorySchema);
        const Brand = mongoose.model("Brand", BrandSchema);

        // Clear existing data first
        console.log("üóëÔ∏è Clearing existing data...");
        await Product.deleteMany({});
        await Category.deleteMany({});
        await Brand.deleteMany({});
        console.log("‚úÖ Cleared existing data");

        // Create categories
        console.log("üìÇ Creating sample categories...");
        const categories = await Category.insertMany([
            {
                name: "Electronics",
                slug: "electronics",
                description: "Electronic devices and gadgets",
                isActive: true,
                sortOrder: 1,
                seo: {
                    title: "Electronics - Latest Tech Gadgets",
                    description: "Discover the latest electronic devices and tech gadgets",
                    keywords: ["electronics", "gadgets", "technology"]
                }
            },
            {
                name: "Clothing",
                slug: "clothing",
                description: "Fashion and apparel",
                isActive: true,
                sortOrder: 2,
                seo: {
                    title: "Clothing - Fashion & Apparel",
                    description: "Trendy clothing and fashion items",
                    keywords: ["clothing", "fashion", "apparel"]
                }
            },
            {
                name: "Books",
                slug: "books",
                description: "Books and literature",
                isActive: true,
                sortOrder: 3,
                seo: {
                    title: "Books - Literature & Education",
                    description: "Educational books and literature",
                    keywords: ["books", "literature", "education"]
                }
            }
        ]);
        console.log(`‚úÖ Created ${categories.length} categories`);

        // Create brands
        console.log("üè∑Ô∏è Creating sample brands...");
        const brands = await Brand.insertMany([
            {
                name: "TechCorp",
                slug: "techcorp",
                description: "Leading technology brand",
                isActive: true,
                sortOrder: 1
            },
            {
                name: "FashionPlus",
                slug: "fashionplus",
                description: "Premium fashion brand",
                isActive: true,
                sortOrder: 2
            },
            {
                name: "BookWorld",
                slug: "bookworld",
                description: "Quality book publisher",
                isActive: true,
                sortOrder: 3
            }
        ]);
        console.log(`‚úÖ Created ${brands.length} brands`);

        // Create sample products
        console.log("üì± Creating sample products...");
        const sampleProducts = [
            {
                name: "iPhone 15 Pro Max",
                description:
                    "Smartphone cao c·∫•p v·ªõi camera chuy√™n nghi·ªáp v√† hi·ªáu nƒÉng m·∫°nh m·∫Ω. Chip A17 Pro m·∫°nh m·∫Ω, camera 48MP Pro v·ªõi zoom quang h·ªçc 5x, pin l√¢u d√†i c·∫£ ng√†y.",
                shortDescription: "Smartphone cao c·∫•p v·ªõi camera chuy√™n nghi·ªáp",
                price: 29990000,
                comparePrice: 32990000,
                costPrice: 25000000,
                sku: "IP15PM-001",
                barcode: "1234567890123",
                trackQuantity: true,
                quantity: 50,
                allowBackorder: false,
                weight: 221,
                dimensions: {
                    length: 15.99,
                    width: 7.67,
                    height: 0.825,
                    unit: "cm"
                },
                category: categories[0]._id,
                brand: brands[0]._id,
                tags: ["smartphone", "iphone", "apple", "5G", "camera"],
                images: [
                    {
                        url: "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500",
                        alt: "iPhone 15 Pro Max",
                        isMain: true,
                        order: 1
                    },
                    {
                        url: "https://images.unsplash.com/photo-1592899677977-9c10ca588bbd?w=500",
                        alt: "iPhone 15 Pro Max Back",
                        isMain: false,
                        order: 2
                    }
                ],
                hasVariants: false,
                variants: [],
                seo: {
                    title: "iPhone 15 Pro Max - Apple Flagship Smartphone",
                    description: "Flagship smartphone v·ªõi hi·ªáu nƒÉng m·∫°nh m·∫Ω v√† camera chuy√™n nghi·ªáp",
                    keywords: ["iphone", "apple", "smartphone", "flagship"]
                },
                status: "active",
                isVisible: true,
                isFeatured: true,
                isDigital: false,
                sold: 0,
                views: 0,
                averageRating: 4.8,
                totalReviews: 125,
                totalRatings: 125,
                publishedAt: new Date()
            },
            {
                name: "Samsung Galaxy S24 Ultra",
                description:
                    "Smartphone Android flagship v·ªõi S Pen t√≠ch h·ª£p v√† camera zoom 100x. M√†n h√¨nh Dynamic AMOLED 2X 6.8 inch, hi·ªáu nƒÉng m·∫°nh m·∫Ω v·ªõi Snapdragon 8 Gen 3.",
                shortDescription: "Android flagship v·ªõi S Pen v√† camera zoom 100x",
                price: 26990000,
                comparePrice: 29990000,
                costPrice: 22000000,
                sku: "SGS24U-001",
                barcode: "1234567890124",
                trackQuantity: true,
                quantity: 30,
                allowBackorder: false,
                weight: 232,
                dimensions: {
                    length: 16.23,
                    width: 7.9,
                    height: 0.86,
                    unit: "cm"
                },
                category: categories[0]._id,
                brand: brands[0]._id,
                tags: ["smartphone", "samsung", "android", "s-pen"],
                images: [
                    {
                        url: "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=500",
                        alt: "Samsung Galaxy S24 Ultra",
                        isMain: true,
                        order: 1
                    }
                ],
                hasVariants: false,
                variants: [],
                seo: {
                    title: "Samsung Galaxy S24 Ultra - Android Flagship",
                    description: "Android flagship v·ªõi S Pen v√† camera zoom 100x",
                    keywords: ["samsung", "galaxy", "android", "s-pen"]
                },
                status: "active",
                isVisible: true,
                isFeatured: true,
                isDigital: false,
                sold: 0,
                views: 0,
                averageRating: 4.7,
                totalReviews: 89,
                totalRatings: 89,
                publishedAt: new Date()
            },
            {
                name: "√Åo Thun Nam Basic",
                description:
                    "√Åo thun nam c∆° b·∫£n, ch·∫•t li·ªáu cotton 100% tho√°ng m√°t, th·∫•m h√∫t m·ªì h√¥i t·ªët. Thi·∫øt k·∫ø ƒë∆°n gi·∫£n, ph√π h·ª£p m·∫∑c h√†ng ng√†y ho·∫∑c t·∫≠p th·ªÉ thao.",
                shortDescription: "√Åo thun nam cotton tho√°ng m√°t",
                price: 299000,
                comparePrice: 399000,
                costPrice: 150000,
                sku: "SHIRT-BM-001",
                barcode: "1234567890125",
                trackQuantity: true,
                quantity: 100,
                allowBackorder: true,
                weight: 200,
                dimensions: {
                    length: 70,
                    width: 50,
                    height: 2,
                    unit: "cm"
                },
                category: categories[1]._id,
                brand: brands[1]._id,
                tags: ["√°o thun", "nam", "cotton", "basic"],
                images: [
                    {
                        url: "https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=500",
                        alt: "√Åo Thun Nam Basic",
                        isMain: true,
                        order: 1
                    }
                ],
                hasVariants: true,
                variants: [
                    {
                        name: "Size",
                        options: ["S", "M", "L", "XL", "XXL"]
                    },
                    {
                        name: "M√†u s·∫Øc",
                        options: ["Tr·∫Øng", "ƒêen", "X√°m", "Navy"]
                    }
                ],
                seo: {
                    title: "√Åo Thun Nam Basic Cotton - Tho√°ng M√°t",
                    description: "√Åo thun nam cotton 100% tho√°ng m√°t, thi·∫øt k·∫ø basic",
                    keywords: ["√°o thun", "nam", "cotton", "basic"]
                },
                status: "active",
                isVisible: true,
                isFeatured: false,
                isDigital: false,
                sold: 0,
                views: 0,
                averageRating: 4.3,
                totalReviews: 45,
                totalRatings: 45,
                publishedAt: new Date()
            },
            {
                name: "S√°ch L·∫≠p Tr√¨nh JavaScript",
                description:
                    "H∆∞·ªõng d·∫´n h·ªçc l·∫≠p tr√¨nh JavaScript t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao. Bao g·ªìm ES6+, DOM manipulation, async/await, v√† c√°c framework hi·ªán ƒë·∫°i nh∆∞ React, Vue.",
                shortDescription: "H·ªçc JavaScript t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao",
                price: 350000,
                comparePrice: 450000,
                costPrice: 200000,
                sku: "BOOK-JS-001",
                barcode: "1234567890126",
                trackQuantity: true,
                quantity: 75,
                allowBackorder: true,
                weight: 600,
                dimensions: {
                    length: 24.0,
                    width: 16.0,
                    height: 3.2,
                    unit: "cm"
                },
                category: categories[2]._id,
                brand: brands[2]._id,
                tags: ["s√°ch", "l·∫≠p tr√¨nh", "javascript", "gi√°o d·ª•c"],
                images: [
                    {
                        url: "https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?w=500",
                        alt: "S√°ch L·∫≠p Tr√¨nh JavaScript",
                        isMain: true,
                        order: 1
                    }
                ],
                hasVariants: false,
                variants: [],
                seo: {
                    title: "S√°ch L·∫≠p Tr√¨nh JavaScript - T·ª´ C∆° B·∫£n ƒê·∫øn N√¢ng Cao",
                    description: "H∆∞·ªõng d·∫´n h·ªçc JavaScript to√†n di·ªán v·ªõi v√≠ d·ª• th·ª±c t·∫ø",
                    keywords: ["javascript", "l·∫≠p tr√¨nh", "s√°ch", "gi√°o d·ª•c"]
                },
                status: "active",
                isVisible: true,
                isFeatured: true,
                isDigital: false,
                sold: 0,
                views: 0,
                averageRating: 4.9,
                totalReviews: 67,
                totalRatings: 67,
                publishedAt: new Date()
            },
            {
                name: "MacBook Air M2",
                description:
                    "Laptop m·ªèng nh·∫π v·ªõi chip M2 m·∫°nh m·∫Ω cho c√¥ng vi·ªác v√† s√°ng t·∫°o. M√†n h√¨nh Liquid Retina 13.6 inch, pin l√™n ƒë·∫øn 18 gi·ªù, thi·∫øt k·∫ø si√™u m·ªèng.",
                shortDescription: "Laptop m·ªèng nh·∫π v·ªõi chip M2 m·∫°nh m·∫Ω",
                price: 31990000,
                comparePrice: 34990000,
                costPrice: 28000000,
                sku: "MBA-M2-001",
                barcode: "1234567890127",
                trackQuantity: true,
                quantity: 25,
                allowBackorder: false,
                weight: 1240,
                dimensions: {
                    length: 30.41,
                    width: 21.5,
                    height: 1.13,
                    unit: "cm"
                },
                category: categories[0]._id,
                brand: brands[0]._id,
                tags: ["laptop", "macbook", "apple", "m2"],
                images: [
                    {
                        url: "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=500",
                        alt: "MacBook Air M2",
                        isMain: true,
                        order: 1
                    }
                ],
                hasVariants: true,
                variants: [
                    {
                        name: "M√†u s·∫Øc",
                        options: ["Space Gray", "Silver", "Gold", "Midnight"]
                    },
                    {
                        name: "B·ªô nh·ªõ",
                        options: ["256GB", "512GB", "1TB"]
                    }
                ],
                seo: {
                    title: "MacBook Air M2 - Laptop Apple M·ªèng Nh·∫π",
                    description: "Laptop Apple v·ªõi chip M2, thi·∫øt k·∫ø m·ªèng nh·∫π v√† hi·ªáu nƒÉng m·∫°nh m·∫Ω",
                    keywords: ["macbook", "apple", "laptop", "m2"]
                },
                status: "active",
                isVisible: true,
                isFeatured: true,
                isDigital: false,
                sold: 0,
                views: 0,
                averageRating: 4.6,
                totalReviews: 34,
                totalRatings: 34,
                publishedAt: new Date()
            }
        ];

        console.log(`Creating ${sampleProducts.length} products...`);
        const createdProducts = await Product.insertMany(sampleProducts);
        console.log(`‚úÖ Created ${createdProducts.length} products`);

        // Display created products
        console.log("\nüìã Created Products Summary:");
        createdProducts.forEach((product, index) => {
            console.log(
                `${index + 1}. ${product.name} - ${product.price.toLocaleString("vi-VN")} VND - Status: ${product.status}`
            );
        });

        // Verify products in database
        const totalProducts = await Product.countDocuments();
        console.log(`\nüìä Total products in database: ${totalProducts}`);

        await mongoose.disconnect();
        console.log("\n‚úÖ Disconnected from MongoDB");

        console.log("\nüéâ Sample products created successfully!");
        console.log("üì± You can now visit http://localhost:3000/vi/products to see the products");
    } catch (error) {
        console.error("‚ùå Error creating sample products:", error.message);
        console.error("Full error:", error);
        if (mongoose.connection.readyState === 1) {
            await mongoose.disconnect();
        }
        process.exit(1);
    }
}

// Run the function
createSampleProducts()
    .then(() => {
        console.log("‚úÖ Script completed successfully");
    })
    .catch((error) => {
        console.error("‚ùå Script failed:", error);
        process.exit(1);
    });
